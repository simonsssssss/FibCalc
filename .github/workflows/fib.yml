name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

env:
  GITHUB_PACKAGES_TOKEN_VARIABLE: ${{ secrets.GH_PACKAGES_TOKEN_VARIABLE }}

jobs:

  build:
    runs-on: ubuntu-20.04
    steps:
    
    - uses: actions/checkout@v2
    
    - name: Buildx setup
      uses: docker/setup-buildx-action@v2
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Log into the DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKER_HUB_USERNAME}}
        password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
        
    - name: Log into the GitHub Packages Container Registry (ghcr)
      run: |
        echo $GITHUB_PACKAGES_TOKEN_VARIABLE | docker login ghcr.io -u simonsssssss --password-stdin
        
    -   name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # base names for tags that make them possible to be pushed to docker.io and ghcr.io
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/fib_image
            ghcr.io/${{ secrets.GH_PACKAGES_USERNAME }}/fib_image
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            #type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            v1.2.3
    
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Build the Docker image and push it to Docker Hub and GitHub Packages
      uses: docker/build-push-action@v2
      with:
        cache-from: type=registry,ref=docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/fib_image:cache
        cache-to: type=registry,ref=docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/fib_image:cache,mode=max
        platforms: linux/amd64,linux/arm64
        context: .
        file: Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
